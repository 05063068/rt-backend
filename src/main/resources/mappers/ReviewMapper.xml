<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
  Notes: Reviews sorted by top status first and then by descending creation date
         A 'top review's is one made by a top critic (one appearing in the critic_top table)
         
  TODO: Account for top publications too?

 -->
 
<mapper namespace="com.rottentomatoes.movieapi.mappers.ReviewMapper">
	<sql id="selectColumns">
       	review.*, 
       	critic.name AS critic_name,       	
       	critic.vanity_url AS critic_vanity_url,
        publication.name AS publication_name,
        
        critic.image_id AS critic_img_id,
        critic_img.img_width AS critic_img_width,
        critic_img.img_height AS critic_img_height,
        critic_img.format AS critic_img_format,
        'c' AS critic_img_type,
        
        IF(critic_top.critic_id,1,0) is_top_critic
	</sql>

    <select id="selectReviewById" resultMap="reviewResultMap">
        SELECT <include refid="selectColumns" />
        FROM review
        LEFT JOIN critic ON review.critic_id=critic.id 
        LEFT JOIN publication ON review.publication_id=publication.id
        LEFT JOIN critic_img ON critic_img.id = critic.image_id
        WHERE review.id = #{id}
    </select>

    <select id="selectAllReviewsForMovie" resultMap="reviewResultMap" parameterType="map">
        SELECT <include refid="selectColumns" />
        FROM review 
        LEFT JOIN critic ON review.critic_id=critic.id 
        LEFT JOIN publication ON review.publication_id=publication.id
        LEFT JOIN critic_img ON critic_img.id = critic.image_id
        LEFT JOIN critic_top ON (review.critic_id=critic_top.critic_id AND critic_top.country='US') 
        WHERE review.movie_id = #{movie_id}
        AND review.status = 'A'
        ORDER BY is_top_critic DESC, review.creation_date DESC

        <choose>
            <when test="limit != null and offset != null">
                LIMIT #{offset},#{limit}
            </when>
            <when test="limit != null">
                LIMIT #{limit}
            </when>
        </choose>
    </select>

    <select id="selectTopCriticReviewsForMovie" resultMap="reviewResultMap" parameterType="map">
        SELECT <include refid="selectColumns" />
        FROM review
        LEFT JOIN critic ON review.critic_id=critic.id
        LEFT JOIN publication ON review.publication_id=publication.id
        INNER JOIN critic_top ON (review.critic_id=critic_top.critic_id AND critic_top.country='US')
        WHERE review.movie_id = #{movie_id}
        AND review.status = 'A'
        ORDER BY review.creation_date DESC

        <choose>
            <when test="limit != null and offset != null">
                LIMIT #{offset},#{limit}
            </when>
            <when test="limit != null">
                LIMIT #{limit}
            </when>
        </choose>
    </select>
    
    <resultMap id="reviewResultMap" type="com.rottentomatoes.movieapi.domain.model.Review">
        <id property="id" column="id" />
        <result property="movieId" column="movie_id"/>
        <result property="quote" column="quote"/>
        <result property="scoreOri" column="score_ori"/>
        <result property="score" column="score"/>
        <result property="url" column="url"/>
        <result property="creationDate" column="creation_date" javaType="java.time.ZonedDateTime"/>
        <result property="topCritic" column="is_top_critic"/>

        <association property="critic" resultMap="criticResultMap" />

        <association property="publication" javaType="com.rottentomatoes.movieapi.domain.model.Publication">
            <id property="id" column="publication_id"/>
            <result property="name" column="publication_name"/>
        </association>
    </resultMap>
    

    <!--  TODO: Move into own CriticMapper.xml -->
    <resultMap id="criticResultMap" type="com.rottentomatoes.movieapi.domain.model.Critic">   
        <id property="id" column="critic_id"/>
        <result property="name" column="critic_name"/>
        <result property="vanity" column="critic_vanity_url"/>
        <association property="mainImage" resultMap="com.rottentomatoes.movieapi.mappers.ImageMapper.imageResultMap" columnPrefix="critic_" notNullColumn="img_id"/>
    </resultMap>    

    <select id="selectAllReviewCountForMovie" resultMap="reviewMetaDataResultMap" parameterType="map">
        SELECT
          count(*) as totalCount
        FROM review
        LEFT JOIN critic ON review.critic_id=critic.id
        LEFT JOIN publication ON review.publication_id=publication.id
        LEFT JOIN critic_top ON (review.critic_id=critic_top.critic_id AND critic_top.country='US')
        WHERE review.movie_id = #{movie_id}
        AND review.status = 'A'
    </select>

    <select id="selectTopCriticReviewCountForMovie" resultMap="reviewMetaDataResultMap" parameterType="map">
        SELECT
          count(*) as totalCount
        FROM review
        LEFT JOIN critic ON review.critic_id=critic.id
        LEFT JOIN publication ON review.publication_id=publication.id
        INNER JOIN critic_top ON (review.critic_id=critic_top.critic_id AND critic_top.country='US')
        WHERE review.movie_id = #{movie_id}
        AND review.status = 'A'
    </select>

    <resultMap id="reviewMetaDataResultMap" type="com.rottentomatoes.movieapi.domain.meta.RelatedMetaDataInformation" />

</mapper>

