<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
  Notes: Reviews sorted by top status first and then by descending creation date
         A 'top review's is one made by a top critic (one appearing in the critic_top table)
         
  TODO: Account for top publications too?

 -->
 
<mapper namespace="com.rottentomatoes.movieapi.mappers.ReviewMapper">
	<sql id="selectColumns">
       	review.*, 
       	critic.name critic_name,
       	critic.image_id critic_image_id,
       	critic.vanity_url critic_vanity_url,
       	publication.name publication_name,
       	IF(critic_top.critic_id,1,0) is_top_critic
	</sql>

    <select id="selectReviewById" resultMap="reviewResultMap">
        SELECT <include refid="selectColumns" />
        FROM review
        LEFT JOIN critic ON review.critic_id=critic.id 
        LEFT JOIN publication ON review.publication_id=publication.id
        WHERE review.id = #{id}
    </select>
    
    <select id="selectReviewsForMovie" resultMap="reviewResultMap" parameterType="map">
        SELECT <include refid="selectColumns" />
        FROM review 
        LEFT JOIN critic ON review.critic_id=critic.id 
        LEFT JOIN publication ON review.publication_id=publication.id
        LEFT JOIN critic_top ON (review.critic_id=critic_top.critic_id AND critic_top.country='US') 
        WHERE review.movie_id = #{movie_id}
        AND review.status = 'A'
        ORDER BY is_top_critic DESC, creation_date DESC
        
		<if test="limit != null">
			LIMIT #{limit}
		</if>
        
    </select>

    
    <resultMap id="reviewResultMap" type="com.rottentomatoes.movieapi.domain.model.Review">
        <id property="id" column="id" />
        <result property="movieId" column="movie_id"/>
        <result property="quote" column="quote"/>
        <result property="scoreOri" column="score_ori"/>
        <result property="score" column="score"/>
        <result property="url" column="url"/>
        <result property="creationDate" column="creation_date"/>
        <result property="topCritic" column="is_top_critic"/>

        <association property="critic" javaType="com.rottentomatoes.movieapi.domain.model.Critic">
            <id property="id" column="critic_id"/>
            <result property="name" column="critic_name"/>
            <result property="imageId" column="critic_image_id"/>
            <result property="vanityUrl" column="critic_vanity_url"/>
        </association>

        <association property="publication" javaType="com.rottentomatoes.movieapi.domain.model.Publication">
            <id property="id" column="publication_id"/>
            <result property="name" column="publication_name"/>
        </association>
    </resultMap>

    <select id="selectReviewCountForMovie" resultMap="reviewMetaDataResultMap" parameterType="map">
        SELECT
          count(*) as totalCount
        FROM review
        LEFT JOIN critic ON review.critic_id=critic.id
        LEFT JOIN publication ON review.publication_id=publication.id
        LEFT JOIN critic_top ON (review.critic_id=critic_top.critic_id AND critic_top.country='US')
        WHERE review.movie_id = #{movie_id}
        AND review.status = 'A'
    </select>

    <resultMap id="reviewMetaDataResultMap" type="com.rottentomatoes.movieapi.domain.meta.RelatedMetaDataInformation" />

</mapper>

