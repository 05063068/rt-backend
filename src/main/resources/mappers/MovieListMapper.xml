<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rottentomatoes.movieapi.mappers.MovieListMapper">

    <sql id="offsetLimitSql">
        <choose>
            <when test="limit != null and offset != null">
                LIMIT #{offset},#{limit}
            </when>
            <when test="limit != null">
                LIMIT #{limit}
            </when>
            <otherwise>
                LIMIT 10
            </otherwise>
        </choose>
    </sql>
    
    <!-- Opening Movies -->
    <select id="selectOpeningMovies" resultMap="com.rottentomatoes.movieapi.mappers.MovieMapper.movieResultMap" parameterType="map">
        SELECT
        <include refid="com.rottentomatoes.movieapi.mappers.MovieMapper.movieSelectSql" />
        INNER JOIN movie_intl_release mir ON mir.movie_id = movie.movie_id
        INNER JOIN rating_summary rs ON rs.movie_id = mir.movie_id
        WHERE mir.release_date BETWEEN #{startDate} AND #{endDate}
        AND mir.country = #{country}
        GROUP BY movie.movie_id
        ORDER BY mir.limited_ind DESC, rs.num_wts DESC
        <include refid="offsetLimitSql"/>
    </select>

    <select id="selectOpeningMoviesCount" resultMap="openingMetaDataResultMap" parameterType="map">
        SELECT
          COUNT(*) AS totalCount FROM movie
        INNER JOIN movie_intl_release mir ON mir.movie_id = movie.movie_id
        WHERE mir.release_date BETWEEN #{startDate} AND #{endDate}
        AND mir.country = #{country}
    </select>
    <resultMap id="openingMetaDataResultMap" type="com.rottentomatoes.movieapi.domain.meta.RootMetaDataInformation" />

    <!-- Top Box Office -->
    <select id="selectTopBoxOfficeMovies" resultMap="com.rottentomatoes.movieapi.mappers.MovieMapper.movieResultMap" parameterType="map">
        SELECT
        <include refid="com.rottentomatoes.movieapi.mappers.MovieMapper.movieSelectSql" />
        INNER JOIN movie_box_office mbo ON mbo.movie_id = movie.movie_id
        WHERE mbo.start_date >= #{startDate}
        AND mbo.country = #{country}
        AND mbo.gross > 0
        AND mbo.estimate_ind = 0
        GROUP BY movie.movie_id
        ORDER BY mbo.gross DESC
        <include refid="offsetLimitSql"/>
    </select>
    
    <select id="selectTopBoxOfficeMoviesCount" resultMap="topBoxOfficeMetaDataResultMap" parameterType="map">
        SELECT
            COUNT(*) AS totalCount FROM movie
        INNER JOIN movie_box_office mbo ON mbo.movie_id = movie.movie_id
        WHERE mbo.start_date >= #{startDate}
        AND mbo.country = #{country}
        AND mbo.gross > 0
        AND mbo.estimate_ind = 0
    </select>
    <resultMap id="topBoxOfficeMetaDataResultMap" type="com.rottentomatoes.movieapi.domain.meta.RootMetaDataInformation" />

    <!-- Estimated Top Box Office -->
    <select id="selectEstimatedTopBoxOfficeMovies" resultMap="com.rottentomatoes.movieapi.mappers.MovieMapper.movieResultMap" parameterType="map">
        SELECT
        <include refid="com.rottentomatoes.movieapi.mappers.MovieMapper.movieSelectSql" />
        INNER JOIN movie_source ms ON ms.movie_id = movie.movie_id
        INNER JOIN showtimes sh ON sh.source_id = ms.id
        INNER JOIN theater t ON t.id = sh.theater_id
        WHERE sh.deleted_ind=0
        AND sh.show_date=#{startDate}
        AND t.country= #{country}
        GROUP BY ms.movie_id ORDER BY SUM(LENGTH(sh.times)) DESC
        <include refid="offsetLimitSql"/>
    </select>

    <select id="selectEstimatedTopBoxOfficeMoviesCount" resultMap="estimatedTopBoxOfficeMetaDataResultMap" parameterType="map">
        SELECT
        COUNT(distinct movie.movie_id) AS totalCount FROM movie
        INNER JOIN movie_source ms ON ms.movie_id = movie.movie_id
        INNER JOIN showtimes sh ON sh.source_id = ms.id
        INNER JOIN theater t ON t.id = sh.theater_id
        WHERE sh.deleted_ind=0
        AND sh.show_date=#{startDate}
        AND t.country= #{country}
    </select>
    <resultMap id="estimatedTopBoxOfficeMetaDataResultMap" type="com.rottentomatoes.movieapi.domain.meta.RootMetaDataInformation" />

    <!-- Upcoming -->
    <select id="selectUpcomingMovies" resultMap="com.rottentomatoes.movieapi.mappers.MovieMapper.movieResultMap" parameterType="map">
        SELECT
        <include refid="com.rottentomatoes.movieapi.mappers.MovieMapper.movieSelectSql" />
        INNER JOIN rating_summary s ON s.movie_id = movie.movie_id
        WHERE movie.theater_release_date BETWEEN #{startDate} AND #{endDate}
        GROUP BY movie.movie_id
        ORDER BY s.num_wts DESC
        <include refid="offsetLimitSql"/>
    </select>

    <select id="selectUpcomingMoviesCount" resultMap="upcomingMetaDataResultMap" parameterType="map">
        SELECT
          COUNT(*) AS totalCount FROM movie
        WHERE movie.theater_release_date BETWEEN #{startDate} AND #{endDate}
    </select>
    <resultMap id="upcomingMetaDataResultMap" type="com.rottentomatoes.movieapi.domain.meta.RootMetaDataInformation" />

    <!-- Top Rentals -->
    <select id="selectTopRentalMovies" resultMap="com.rottentomatoes.movieapi.mappers.MovieMapper.movieResultMap" parameterType="map">
        SELECT
        <include refid="com.rottentomatoes.movieapi.mappers.MovieMapper.movieSelectSql" />
        INNER JOIN rating_summary s ON s.movie_id = movie.movie_id
        AND movie.status = 1
        AND movie.dvd_release_date
        BETWEEN #{startDate} AND #{endDate}
        GROUP BY movie.movie_id
        ORDER BY movie.dvd_release_date DESC, s.num_wts DESC
        <include refid="offsetLimitSql"/>
    </select>

    <select id="selectTopRentalMoviesCount" resultMap="topRentalMetaDataResultMap" parameterType="map">
        SELECT
          COUNT(*) AS totalCount FROM movie
        WHERE movie.status = 1
        AND movie.dvd_release_date
        BETWEEN #{startDate} AND #{endDate}
    </select>
    <resultMap id="topRentalMetaDataResultMap" type="com.rottentomatoes.movieapi.domain.meta.RootMetaDataInformation" />

</mapper>
