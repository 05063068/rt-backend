files:
    "/usr/local/bin/get-flx-db-cred":
        mode: "000755"
        owner: root
        group: root
        content: |
            #!/bin/bash
            # This script sets up database credentials based on the elasticbeanstalk configuration
            #
            if grep "spring.profiles.active=..prod" /etc/sysconfig/tomcat8 > /dev/null ; then
                pword="$(aws s3 cp s3://flx-db-credentials/prod/ro_password - )"
                user="$(aws s3 cp s3://flx-db-credentials/prod/ro_user - )"
            else
                pword="$(aws s3 cp s3://flx-db-credentials/snap/ro_password - )"
                user="$(aws s3 cp s3://flx-db-credentials/snap/ro_user - )"
            fi
            if [ "x$1" = "xuser" ] ; then
                echo "$user"
            else
                echo "$pword"
            fi

container_commands:
  100-replace-pass:
    # Inject the password into the application config.
    command: "for i in $(ls /tmp/deployment/application/ROOT/WEB-INF/classes/*.properties) ; do sudo sed -i -e \"s/datasource.primary.password.*/datasource.primary.password=$(/usr/local/bin/get-flx-db-cred)/\" $i ; done "
  101-replace-user:
    # Inject the username into the application config.
    command: "for i in $(ls /tmp/deployment/application/ROOT/WEB-INF/classes/*.properties) ; do sudo sed -i -e \"s/datasource.primary.username.*/datasource.primary.username=$(/usr/local/bin/get-flx-db-cred user)/\" $i ; done "
