files:
    # We need a custom repo for logstash since it is not default in yum.
    "/etc/yum.repos.d/logstash.repo":
        mode: "000644"
        owner: root
        group: root
        content: |
            [logstash-2.3]
            name=Logstash repository for 2.3.x packages
            baseurl=https://packages.elastic.co/logstash/2.3/centos
            gpgcheck=1
            gpgkey=https://packages.elastic.co/GPG-KEY-elasticsearch
            enabled=1

    # logstash's configuration file
    "/tmp/logstash.conf":
        mode: "000644"
        owner: root
        group: root
        content: |
            input {
                file {
                    path => "/var/log/nginx/access_l.json"
                    codec => "json"
                    type => "nginx"
                    add_field => {
                        env => "__EB_ENV__"
                        sub_type    => "http_access"
                        vip         => "catalog-api"
                    }
                    # This format tells logstash to expect 'logstash' json events from the file.
                }
            }
            input {
                file {
                    path => "/var/log/tomcat8/application-json*"
                    type => "tomcat"
                    codec => "json"
                    add_field => {
                        vip     =>  "catalog-api"
                        env     =>  "__EB_ENV__"
                    }
                }
            }
            filter {
                if [type] in "nginx" {
                    mutate {
                        add_field => { "urlPathNormalized" => "%{urlPath}" }
                    }
                    mutate {
                        convert => [ "duration" , "float" ]
                        convert => [ "bytes" , "integer" ]
                        remove_field => [ "message", "offset", "ident", "auth", "timestamp" ]
                        
                        gsub => [
                            "urlPathNormalized", "^([^?]+)(?<!/)/?\?*.*$", "\1"
                            ]
                        gsub => [ "urlPathNormalized", "(/mobile)*/(actor|movie|m|tv|user|critic|quiz|news|play|movie-times|watch-movies|watch-tv|celebrity)/[\w_-]+(/?)(.*)$", "\1/\2/{ID}\3\4" ]
                        
                        # normalization for ticketing hex identifiers
                        gsub => [ "urlPathNormalized", "retailTxn\/[a-fA-F0-9]*[0-9]+[a-fA-F0-9]*", "retailTxn/{ID}" ]
                        gsub => [ "urlPathNormalized", "tickets\/[a-fA-F0-9]*[0-9]+[a-fA-F0-9]*", "tickets/{ID}" ]
                        gsub => [ "urlPathNormalized", "vanity-token\/.*", "vanity-token/{ID}" ]
                        
                        # /api/private/v1.0/user/771357113 => /api/private/v1.0/user/{ID}
                        # /android/api/v1/movies/771373844.json => /android/api/v1/movies/{ID}.json
                        # /user/926527976/collection => /user/XXX/collection
                        # /a/v1.1/42342/b/422242/c/42234.json = > /a/v1.1/XXX/b/XXX/c/XXX.json
                        gsub => [ "urlPathNormalized", "(?<!v|\.)[0-9]+", "{ID}" ]
                    }
                    ruby {
                        code => "event['duration'] = event['duration'] * 1000"
                    }
                }
                if [type] in "tomcat" {
                    if ("" in [stack_trace]) {
                        grok {
                            match => { "stack_trace" => "%{JAVACLASS:exception_class}:" }
                        }
                    }
                }
            }
            output { 
                redis {
                    key => "logging"
                    data_type => "list"
                    host => "logs-redis.aws.prod.flixster.com"
                }
            }
    
    # logrotation configuration to keep access log visible
    "/etc/logrotate.d/nginx":
        mode: "000644"
        owner: root
        group: root
        content: |
            /var/log/nginx/*log /var/log/nginx/*json {
                create 0644 nginx nginx
                size 100M
                rotate 0
                missingok
                notifempty
                compress
                sharedscripts
                postrotate
                    /etc/init.d/nginx reopen_logs
                    chmod 755 /var/log/nginx
                endscript
            }

    # schedule log rotations
    "/var/spool/cron/ec2-user":
        mode: "000600"
        owner: ec2-user
        group: ec2-user
        content: |
            05 * * * * sudo /usr/sbin/logrotate -f /etc/logrotate.d/nginx
            
commands:
    000-add-sudoers:
        command: "grep -q 'Defaults:root !requiretty' /etc/sudoers.d/logstash || echo -e 'Defaults:root !requiretty' > /etc/sudoers.d/logstash; chmod 440 /etc/sudoers.d/logstash"
    100-install-logstash:
        command: "yum -y install logstash"

container_commands:
    100-replace-env:
    # Inject the environment name to the logstash config. This creates the
    # config that is actually used
        command: "sudo sed \"s/__EB_ENV__/$(/usr/local/bin/get-eb-env-name)/g\" /tmp/logstash.conf > /etc/logstash/conf.d/logstash.conf"
    200-stop-logstash:
        command: "sudo bash -c \"export KILL_ON_STOP_TIMEOUT=1;/etc/init.d/logstash stop\""
    300-start-logstash:
        command: "sudo service logstash start"
