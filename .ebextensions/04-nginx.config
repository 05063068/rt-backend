#
# logstash configuration
#

files:
  # Configuration of movie-api listeners
  "/etc/nginx/conf.d/movie-api.conf":
    mode: "000755"
    owner: root
    group: root
    content: |
      upstream movie-api {
          server 127.0.0.1:80;
      }

  # Nginx configuration
  "/etc/nginx/nginx.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      user  nginx;
      worker_processes  auto;
      
      error_log  /var/log/nginx/error.log;
      
      pid        /var/run/nginx.pid;
      
      
      events {
          worker_connections 1024;
      }
      
      http {
          include         /etc/nginx/mime.types;
          default_type    application/octet-stream;
      
          log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';
      
          access_log  /var/log/nginx/access.log  main;
         log_format logstash_json '{ "@timestamp": "$time_iso8601", '
                               '"remote_addr": "$remote_addr", '
                               '"remote_user": "$remote_user", '
                               '"body_bytes_sent": "$body_bytes_sent", '
                               '"request_time": "$request_time", '
                               '"status": "$status", '
                               '"request": "$request", '
                               '"request_method": "$request_method", '
                               '"http_referrer": "$http_referer", '
                               '"http_user_agent": "$http_user_agent" } ';
      
           access_log  /var/log/nginx/access.log  logstash_json;
      
      
          sendfile            on;
          tcp_nopush          on;
          tcp_nodelay         on;
      
          keepalive_timeout   65;
          types_hash_max_size 2048;
      
      
          include /etc/nginx/conf.d/*.conf;
      
          index   index.html index.htm;
          proxy_cache_methods GET HEAD POST;
          proxy_cache_path /var/nginxcache levels=1:2 keys_zone=my_zone:100m inactive=60m;
          proxy_cache_key "$request_uri$args";
          proxy_cache_valid 200 60m;

      
          server {
              listen       81;
              server_name  localhost;
              root         /usr/share/nginx/html;
      
      
      
              location / {
                  proxy_cache my_zone;
                  proxy_cache_bypass  $http_cache_control;
                  add_header X-Proxy-Cache $upstream_cache_status;
                  expires 1h;
                  add_header Cache-Control "public";

                  proxy_hide_header Expires;
                  proxy_pass http://movie-api;
               }
      
      
             merge_slashes off;
             location ^~ /movie-api/ {
                rewrite /movie-api(/.*) $1 break;
                proxy_buffering off;
                proxy_pass http://movie-api;
             }
      
      
              error_page 404 /404.html;
              location = /40x.html {
              }
      
              error_page 500 502 503 504 /50x.html;
              location = /50x.html {
              }
          }
      }

commands:
  000-install-nginx:
    command: "yum -y install nginx"
    command: "if [ ! -d '/var/nginxcache' ]; then mkdir /var/nginxcache; fi"

container_commands:
  199-start-nginx:
    command: "sudo service nginx restart"
